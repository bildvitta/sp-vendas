<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    private string $tableName;

    public function __construct()
    {
        $this->tableName = config('sp-vendas.table_prefix') . 'sales';
    }

    public function up()
    {
        if (!Schema::hasTable($this->tableName)) {
            Schema::create($this->tableName, function (Blueprint $table) {
                $table->id();
                $table->uuid('uuid')->unique();
                $table->string('external_code')->nullable();
                $table->uuid('contract_ref_uuid')->nullable();
                $table->boolean('concretized')->default(false);
                $table->boolean('special_needs')->nullable();
                $table->decimal('input', 12, 3);
                $table->decimal('price_total', 12, 3);
                $table->boolean('is_insurance')->nullable();
                $table->string('commission_option')->nullable();
                $table->decimal('commission_manager', 12, 3)->nullable();
                $table->decimal('commission_supervisor', 12, 3)->nullable();
                $table->decimal('commission_seller', 12, 3)->nullable();
                $table->decimal('commission_real_estate', 12, 3)->nullable();
                $table->longText('justified');
                $table->string('customer_justified')->nullable();
                $table->dateTime('customer_justified_at')->nullable();
                $table->datetime('justified_at')->nullable();
                $table->date('made_at')->nullable();
                $table->unsignedBigInteger('made_by')->nullable();
                $table->string('status')->default('in_approval');
                $table->dateTime('signed_contract_at')->nullable();
                $table->dateTime('bill_paid_at')->nullable();

                $table->foreignId('real_estate_development_id');
                $table->foreignId('blueprint_id');
                $table->foreignId('proposal_model_id');
                $table->foreignId('buying_options_id');
                $table->foreignId('unit_id');
                $table->foreignId('crm_customer_id');
                $table->foreignId('user_hub_seller_id');
                $table->foreignId('user_hub_manager_id');
                $table->foreignId('user_hub_supervisor_id');
                $table->foreignId('justified_user_id')->nullable();
                $table->foreignId('real_estate_agency_id')->nullable();

                $table->timestamps();
                $table->softDeletes();

                Schema::disableForeignKeyConstraints();
                $table->foreign('real_estate_development_id', 'produto_r_e_d_vendas_sale_foreign')
                    ->references('id')->on(
                        sprintf('%sreal_estate_developments', config('sp-produto.table_prefix'))
                    )->onUpdate('cascade')->onDelete('cascade');

                $table->foreign('blueprint_id', 'produto_blueprint_vendas_sale_foreign')
                    ->references('id')->on(
                        sprintf('%sblueprints', config('sp-produto.table_prefix'))
                    )->onUpdate('cascade')->onDelete('cascade');
                Schema::enableForeignKeyConstraints();

                $table->foreign('proposal_model_id', 'produto_proposal_model_vendas_sale_foreign')
                    ->references('id')->on(
                        sprintf('%sproposal_models', config('sp-produto.table_prefix'))
                    )->onUpdate('cascade')->onDelete('cascade');

                $table->foreign('buying_options_id', 'produto_buying_option_vendas_sale_foreign')
                    ->references('id')->on(
                        sprintf('%sbuying_options', config('sp-produto.table_prefix'))
                    )->onUpdate('cascade')->onDelete('cascade');

                $table->foreign('unit_id', 'produto_unit_vendas_sale_foreign')
                    ->references('id')->on(
                        sprintf('%sunits', config('sp-produto.table_prefix'))
                    )->onUpdate('cascade')->onDelete('cascade');

                $table->foreign('crm_customer_id', 'crm_customer_vendas_sale_foreign')
                    ->references('id')->on(
                        sprintf('%scustomers', config('sp-crm.table_prefix'))
                    )->onUpdate('cascade')->onDelete('cascade');

                $table->foreign('user_hub_seller_id', 'hub_seller_vendas_sale_foreign')
                    ->references('id')->on(
                        sprintf('%susers', config('sp-hub.table_prefix'))
                    )->onUpdate('cascade')->onDelete('cascade');

                $table->foreign('user_hub_manager_id', 'hub_manager_vendas_sale_foreign')
                    ->references('id')->on(
                        sprintf('%susers', config('sp-hub.table_prefix'))
                    )->onUpdate('cascade')->onDelete('cascade');

                $table->foreign('user_hub_supervisor_id', 'hub_supervisor_vendas_sale_foreign')
                    ->references('id')->on(
                        sprintf('%susers', config('sp-hub.table_prefix'))
                    )->onUpdate('cascade')->onDelete('cascade');

                $table->foreign('justified_user_id', 'hub_justified_vendas_sale_foreign')
                    ->references('id')->on(
                        sprintf('%susers', config('sp-hub.table_prefix'))
                    )->onUpdate('cascade')->onDelete('cascade');

                $table->foreign('real_estate_agency_id', 'vendas_sale_r_e_agency_foreign')
                    ->references('id')->on(config('sp-vendas.table_prefix') . 'real_estate_agencies')
                    ->onUpdate('cascade')->onDelete('cascade');
                Schema::enableForeignKeyConstraints();
            });
        }
    }

    public function down()
    {
        Schema::dropIfExists($this->tableName);
    }
};